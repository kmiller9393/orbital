// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TriviaContainer TriviaContainer component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TriviaContainer
    history={
        Object {
            "location": Object {
              "pathname": "/review-one",
            },
            "replace": [Function],
          }
    }
    location={
        Object {
            "pathname": "/review-one",
          }
    }
    triviaAnswers={
        Array [
            Object {
              "answer": "Asteroid",
              "id": 0,
              "question": "a small solar system object composed mostly of rock\\"",
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="trivia-container-header"
>
          <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="trivia-center"
          >
                    <img
                              alt="Navigate Back"
                              className="back-arrow"
                              src="left-arrow.svg"
                    />
          </NavLink>
          <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="/"
          >
                    <img
                              alt="Orbital"
                              className="trivia--image-after"
                              src="orbital-header.svg"
                    />
          </NavLink>
</div>,
        <h2
          className="trivia-title"
>
          Weekly Trivia
</h2>,
        <div
          className="answers-container"
>
          <div
                    className="choice-card"
                    onClick={[Function]}
          />
          <div
                    onClick={[Function]}
          />
          <div
                    onClick={[Function]}
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="trivia-center"
>
              <img
                            alt="Navigate Back"
                            className="back-arrow"
                            src="left-arrow.svg"
              />
</NavLink>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              to="/"
>
              <img
                            alt="Orbital"
                            className="trivia--image-after"
                            src="orbital-header.svg"
              />
</NavLink>,
            false,
          ],
          "className": "trivia-container-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <img
                alt="Navigate Back"
                className="back-arrow"
                src="left-arrow.svg"
/>,
              "to": "trivia-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Navigate Back",
                "className": "back-arrow",
                "src": "left-arrow.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <img
                alt="Orbital"
                className="trivia--image-after"
                src="orbital-header.svg"
/>,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Orbital",
                "className": "trivia--image-after",
                "src": "orbital-header.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Weekly Trivia",
          "className": "trivia-title",
        },
        "ref": null,
        "rendered": "Weekly Trivia",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            <div
              className="choice-card"
              onClick={[Function]}
/>,
            false,
            <div
              onClick={[Function]}
/>,
            <div
              onClick={[Function]}
/>,
          ],
          "className": "answers-container",
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "choice-card",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="trivia-container-header"
>
            <NavLink
                        activeClassName="active"
                        aria-current="page"
                        to="trivia-center"
            >
                        <img
                                    alt="Navigate Back"
                                    className="back-arrow"
                                    src="left-arrow.svg"
                        />
            </NavLink>
            <NavLink
                        activeClassName="active"
                        aria-current="page"
                        to="/"
            >
                        <img
                                    alt="Orbital"
                                    className="trivia--image-after"
                                    src="orbital-header.svg"
                        />
            </NavLink>
</div>,
          <h2
            className="trivia-title"
>
            Weekly Trivia
</h2>,
          <div
            className="answers-container"
>
            <div
                        className="choice-card"
                        onClick={[Function]}
            />
            <div
                        onClick={[Function]}
            />
            <div
                        onClick={[Function]}
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                aria-current="page"
                to="trivia-center"
>
                <img
                                alt="Navigate Back"
                                className="back-arrow"
                                src="left-arrow.svg"
                />
</NavLink>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                to="/"
>
                <img
                                alt="Orbital"
                                className="trivia--image-after"
                                src="orbital-header.svg"
                />
</NavLink>,
              false,
            ],
            "className": "trivia-container-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <img
                  alt="Navigate Back"
                  className="back-arrow"
                  src="left-arrow.svg"
/>,
                "to": "trivia-center",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Navigate Back",
                  "className": "back-arrow",
                  "src": "left-arrow.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <img
                  alt="Orbital"
                  className="trivia--image-after"
                  src="orbital-header.svg"
/>,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Orbital",
                  "className": "trivia--image-after",
                  "src": "orbital-header.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Weekly Trivia",
            "className": "trivia-title",
          },
          "ref": null,
          "rendered": "Weekly Trivia",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              <div
                className="choice-card"
                onClick={[Function]}
/>,
              false,
              <div
                onClick={[Function]}
/>,
              <div
                onClick={[Function]}
/>,
            ],
            "className": "answers-container",
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "choice-card",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
